<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtAceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAArtAAAK7QECiEnBAAAAGHRFWHRTb2Z0d2FyZQBBZG9i
        ZSBGaXJld29ya3NPsx9OAAAEGUlEQVRYR+2W60+TdxTHH4ciM1nmEgZeRuugde1Tnj4IFS+ouxQ0gJWy
        ug1fGZeMOWE3depkijrZKkqhBQrFC4YYg84osslQEVoobZ+WAvsb5l7Qd2Yu2d54dk5XkNKWFldisuzF
        J+fp73cu357zey4MADDPk+danP74f1tAo4NZ2iok5M424nnrwEWvZFPH+NbfrvxSDB3j+XaLO1kVTsi8
        CGgfXcd2jBU+ahthwexOhQveHBSx/Un76Kbv9VZm8XQhcRdwfkS+7PJY4UOzOwNMzlegyZWKdik0C2lw
        aTQfzntzr5d3PT17cRVwtJ9ZcGmseLhZYKHekQxG5wpkud82OFOhwZECJpfoMe4lTHYhrgIueouNZrcK
        6uyvgsHxGhiGVwaDa0aneM+8jOCCV/Nei/tNqLUvh7P2tBDO2UUoKqNy5kGMSwfaRgpXtHi2PToztAr0
        QyIgO5PaofRjc7oL6hyqHa0eTW+joD4b7VHd4tH01dozocYmgu8G00PQD0k6IuUI2wGjq6DM7NHiwXkH
        GoUiaHZrrkVK0Op5t7LOkQcnrWL41iYJ4bRN6j0+mDN16KKOwCQU7mpyl8ApqxyO9YvgeL8YDE41iigN
        EWEe0YkbXNv+qB6QoIDVYXjj9xqbclXMT0KjS7vFJGihup+Fbx5IUYDMT1VfBpwbzgeTECzCJJQ8OGnN
        CvKdjCF7YiCzLNr4gkZwamBjVdV9Dg7fXQ1f35NPcQSvD/VK8IAV4FhKOymp0aX7qMa2BQ7dlQb5TsYd
        vae4Gq14yNtwf480/UCP3Hewh4VwfHlHCjXWrSiibFw/WPTngR5ZWL+vflZMHO5VvTxnARTwxY8c+3m3
        wodAOD69LYPqPjUcvJMNn3XLw/rs/4nXxVI84vdAZZeS3XcrcwKBmVTg2t6bMvjklgLoOmS/S9kda/FZ
        P0g+vpHFlv/A+cpvcBA7yscVN3NXxkUAJdnTybO7r3I+BGLhw86sfXMpHtMn2a7LPPtBO+dDYDbK2pXC
        XIvHJICcSi08q23lfAiUWkLRWrgnO9ty+HkTQIlLLGtkRY2cr6iJA7QwZfFa08wbnqV4xA4kMAyDLEBe
        QBIIci4w8HJ1HTehrucALagNHOQblA/fPrN2CYYsRL9FCFl/TADKQbnCvnf8i7iZiCQjIkSCyBEO4ZFs
        RIWsxRyStLdS3t9wQvFrnl4Jeae5v2Q6cQWuk/96ZB2SS76BGIqlHJSLfCg31aBaiVMdCAhIQfs6IkMy
        kSwkJ5CMkm9ANmIxfslLSZslOtHeZdnJWvy9Btc3I3m0H/AjX4ohIZSDclFOyk01qNZTAdPnhxsz2z/Z
        WupS4kKGSUKXRX71/4zoRSQpwOLAnyHf6eOIOIa4fBE96wGM+Tb8NwWixf7fgb8B+4MYfOpGfUIAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>